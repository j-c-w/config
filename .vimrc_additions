" This sets up the bundles that are used. See the settings I wrote below this

" ------------------------------------------------------------
"  ---------------------- Vundle Setup ---------------------
" -----------------------------------------------------------
set nocompatible              " be iMproved, required
filetype off                  " required


" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin("$HOME/.vim/VundlePlugins")
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
" This is plugin for managing git stuff that I just can't figure out
" how to use...
Bundle 'tpope/vim-fugitive'
" This is the file manager that is pretty helpful :NERDTree
Bundle 'scrooloose/nerdtree'
" This is the theme that everyone seems to like
Bundle 'vim-scripts/Solarized'
" This is for a thesaurus
Bundle 'beloglazov/vim-online-thesaurus'

" Also add a few language syntaxes that are bundled in
Bundle 'hdima/python-syntax'
Bundle 'derekwyatt/vim-scala'
" Adds a plugin for using the undo tree
Bundle 'mbbill/undotree'
Bundle 'vim-airline/vim-airline'
Bundle 'vim-airline/vim-airline-themes'
Bundle 'tpope/vim-surround'
" This adds real time syntax errors to a few of the languages.
Bundle 'scrooloose/syntastic'
Bundle 'mhinz/vim-startify'
" Add some rainbow parens
Bundle 'junegunn/rainbow_parentheses.vim'
Bundle 'easymotion/vim-easymotion'
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
" Brief help
" Put your non-Plugin stuff after this line

"  ------------------------------------------------------------------
" ------------------ END OF VUNDLE SETTINGS ---------------------------
"  ------------------------------------------------------------------

" Adds a persistent undo file to the system:
if has("persistent_undo")
	call system('mkdir ' . ' ~/.undodir/')
	set undodir=~/.undodir/
	set undofile
endif

" And map the undo thing to \u
noremap <leader>u :UndotreeToggle<CR>


" For nerd tree, map localleaer n to toggle it
noremap <leader>n :NERDTreeToggle<CR>

" Some stuff to set up the rainbow parens:
let g:rainbow#max_level = 16
let g:rainbow#pairs = [['(', ')'], ['{', '}'], ['[', ']']]

augroup parens
	autocmd! 
	autocmd FileType python,scala,html,java,c,cpp,sml,prolog :RainbowParentheses
augroup END

" Set the statusline theme:
" Need the laststatus to make the thing work. 
let g:airline_theme='cool'
set laststatus=2
set t_Co=256
let g:airline_powerline_fonts = 1
" This sets the buffer tabline
let g:airline#extensions#tabline#enabled = 1

" Add the symbols for the powerliine stuff
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

  " unicode symbols
  let g:airline_left_sep = '»'
  let g:airline_left_sep = '▶'
  let g:airline_right_sep = '«'
  let g:airline_right_sep = '◀'
  let g:airline_symbols.crypt = '🔒'
  let g:airline_symbols.linenr = '␊'
  let g:airline_symbols.linenr = '␤'
  let g:airline_symbols.linenr = '¶'
  let g:airline_symbols.maxlinenr = '☰'
  let g:airline_symbols.maxlinenr = ''
  let g:airline_symbols.branch = '⎇'
  let g:airline_symbols.paste = 'ρ'
  let g:airline_symbols.paste = 'Þ'
  let g:airline_symbols.paste = '∥'
  let g:airline_symbols.spell = 'Ꞩ'
  let g:airline_symbols.notexists = '∄'
  let g:airline_symbols.whitespace = 'Ξ'

  " powerline symbols
  let g:airline_left_sep = ''
  let g:airline_left_alt_sep = ''
  let g:airline_right_sep = ''
  let g:airline_right_alt_sep = ''
  let g:airline_symbols.branch = ''
  let g:airline_symbols.readonly = ''
  let g:airline_symbols.linenr = ''

  " old vim-powerline symbols
  " let g:airline_left_sep = '⮀'
  " let g:airline_left_alt_sep = '⮁'
  " let g:airline_right_sep = '⮂'
  " let g:airline_right_alt_sep = '⮃'
  " let g:airline_symbols.branch = '⭠'
  " let g:airline_symbols.readonly = '⭤'
  " let g:airline_symbols.linenr = '⭡'


" Needed for airline to work preperly:
set encoding=utf-8
let g:airline_powerline_fonts = 1

" -----------------------------------------------------------
" ------------------------- Latex Suite settings -----------
" -----------------------------------------------------------
filetype plugin on			  " required by Latex suite
filetype indent on
set shellslash
set grepprg=grep\ -nH\ $*
let g:tex_flavor='latex'
let g:Tex_DefaultTargetFormat='pdf'
" Sets the spelling on by default in latex files
" autocmd FileType latex BufOpen Spell


